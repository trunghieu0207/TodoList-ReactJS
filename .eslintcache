[{"C:\\project\\my-app\\src\\stories\\Header.stories.tsx":"1","C:\\project\\my-app\\src\\stories\\Button.stories.tsx":"2","C:\\project\\my-app\\src\\stories\\Page.stories.tsx":"3","C:\\project\\my-app\\src\\components\\__stories__\\Form.stories.tsx":"4","C:\\project\\my-app\\src\\stories\\Button.tsx":"5","C:\\project\\my-app\\src\\stories\\Page.tsx":"6","C:\\project\\my-app\\src\\components\\Form.tsx":"7","C:\\project\\my-app\\src\\stories\\Header.tsx":"8","C:\\project\\my-app\\src\\components\\ToDoList.tsx":"9","C:\\project\\my-app\\src\\index.js":"10","C:\\project\\my-app\\src\\reportWebVitals.js":"11","C:\\project\\my-app\\src\\App.tsx":"12","C:\\project\\my-app\\src\\components\\Todo.tsx":"13","C:\\project\\my-app\\src\\components\\__stories__\\Todo.stories.tsx":"14","C:\\project\\my-app\\src\\components\\__stories__\\ToDoList.stories.tsx":"15"},{"size":510,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":804,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":605,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1006,"mtime":1611023542319,"results":"20","hashOfConfig":"17"},{"size":941,"mtime":499162500000,"results":"21","hashOfConfig":"17"},{"size":2415,"mtime":499162500000,"results":"22","hashOfConfig":"17"},{"size":1726,"mtime":1615198070317,"results":"23","hashOfConfig":"17"},{"size":1356,"mtime":499162500000,"results":"24","hashOfConfig":"17"},{"size":662,"mtime":1609735294834,"results":"25","hashOfConfig":"17"},{"size":500,"mtime":1609140304259,"results":"26","hashOfConfig":"17"},{"size":362,"mtime":1609140304261,"results":"27","hashOfConfig":"17"},{"size":1899,"mtime":1609740897623,"results":"28","hashOfConfig":"17"},{"size":1766,"mtime":1615198282869,"results":"29","hashOfConfig":"17"},{"size":706,"mtime":1610936110945,"results":"30","hashOfConfig":"17"},{"size":921,"mtime":1610936132098,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g95q5d",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"C:\\project\\my-app\\src\\stories\\Header.stories.tsx",[],["69","70"],"C:\\project\\my-app\\src\\stories\\Button.stories.tsx",[],"C:\\project\\my-app\\src\\stories\\Page.stories.tsx",[],"C:\\project\\my-app\\src\\components\\__stories__\\Form.stories.tsx",[],"C:\\project\\my-app\\src\\stories\\Button.tsx",[],"C:\\project\\my-app\\src\\stories\\Page.tsx",[],"C:\\project\\my-app\\src\\components\\Form.tsx",["71","72"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, {useState} from 'react';\r\nimport {TodoInterface} from '../App'\r\nimport {faPlusSquare} from '@fortawesome/free-solid-svg-icons'\r\n\r\ntype SetFunction = (arg: any) => void;\r\n\r\ninterface FormInputParams {\r\n    setInputText: SetFunction;\r\n    setToDos: SetFunction;\r\n    toDos: TodoInterface[];\r\n    inputText: string;\r\n    setStatus: SetFunction\r\n}\r\n\r\nconst Form = ({setInputText, setToDos, toDos, inputText, setStatus}: FormInputParams) => {\r\n    const inputTextHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitHandler = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setToDos([...toDos, {text: inputText, completed: false, id: Math.random() * 1000}]);\r\n    }\r\n\r\n    const statusHandler = (e: any) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    const [color, setColor] = useState('');\r\n\r\n    const applyStyle = {\r\n        backgroundColor: `${color}`\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <input type=\"text\" className=\"todo-input\" onChange={inputTextHandler}/>\r\n            <button className=\"todo-button\" type=\"submit\" onClick={submitHandler}>\r\n                <FontAwesomeIcon icon={faPlusSquare} />\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","C:\\project\\my-app\\src\\stories\\Header.tsx",[],"C:\\project\\my-app\\src\\components\\ToDoList.tsx",[],"C:\\project\\my-app\\src\\index.js",[],["73","74"],"C:\\project\\my-app\\src\\reportWebVitals.js",[],"C:\\project\\my-app\\src\\App.tsx",["75"],"import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\n\nexport interface TodoInterface {\n    completed: boolean;\n    text: string;\n    id: number;\n}\n\nfunction App() {\n    const [inputText, setInputText] = useState('');\n    const [toDos, setToDos] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filterTodo, setFilterTodo] = useState([]);\n\n\n    useEffect(() => {\n        getFromLocalStorage();\n    }, []);\n\n    useEffect(() => {\n        filterHandler();\n        saveToLocalStorage();\n    }, [toDos, status]);\n\n    const filterHandler = () => {\n        switch (status) {\n            case 'completed':\n                setFilterTodo(toDos.filter((todo: TodoInterface) => todo.completed));\n                break;\n            case 'uncompleted':\n                setFilterTodo(toDos.filter((todo: TodoInterface) => !todo.completed));\n                break;\n            default:\n                setFilterTodo(toDos);\n        }\n    }\n\n    const saveToLocalStorage = () => {\n        localStorage.setItem('toDos', JSON.stringify(toDos));\n    }\n\n    const getFromLocalStorage = () => {\n        const dataFromLocal = localStorage.getItem('toDos');\n        if (dataFromLocal === null) {\n            localStorage.setItem('toDos', JSON.stringify([]))\n        } else {\n            setToDos(JSON.parse(dataFromLocal));\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Todo List</h1>\n            </header>\n            <Form\n                inputText={inputText}\n                toDos={toDos}\n                setToDos={setToDos}\n                setInputText={setInputText}\n                setStatus={setStatus}/>\n            <ToDoList toDos={toDos} setToDos={setToDos} filterTodo={filterTodo}/>\n        </div>\n    );\n}\n\nexport default App;\n",["76","77"],"C:\\project\\my-app\\src\\components\\Todo.tsx",["78","79"],"C:\\project\\my-app\\src\\components\\__stories__\\Todo.stories.tsx",["80"],"import Todo, {TodoProps} from \"../Todo\";\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport {Story} from \"@storybook/react/types-6-0\";\r\n\r\nconst todos = [\r\n    {\r\n        completed: true,\r\n        text: 'Completed',\r\n        id: Math.random() * 1000,\r\n    },\r\n    {\r\n        completed: false,\r\n        text: 'Uncompleted',\r\n        id: Math.random() * 1000,\r\n    },\r\n]\r\nconst handleClick = action('click');\r\n\r\nexport default {\r\n    title: 'My Component/Todo',\r\n    component: Todo\r\n}\r\n\r\nconst Template: Story<TodoProps> = (args) => (\r\n    <Todo {...args}/>\r\n)\r\n\r\nexport const TodoStories = Template.bind({});\r\nTodoStories.args = {\r\n    toDos: todos,\r\n    setTodo: handleClick,\r\n    toDo: todos[0]\r\n};","C:\\project\\my-app\\src\\components\\__stories__\\ToDoList.stories.tsx",["81"],"import ToDoList, {ToDoListProps} from \"../ToDoList\";\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport {Story} from \"@storybook/react/types-6-0\";\r\nimport {TodoInterface} from \"../../App\";\r\n\r\ninterface ToDoListPropsStory extends ToDoListProps {\r\n    toDo?: TodoInterface;\r\n}\r\n\r\nconst todos: TodoInterface[] = [\r\n    {\r\n        completed: true,\r\n        text: 'Completed',\r\n        id: Math.random() * 1000,\r\n    },\r\n    {\r\n        completed: false,\r\n        text: 'Uncompleted',\r\n        id: Math.random() * 1000,\r\n    },\r\n]\r\n\r\nconst handleClick = action('click');\r\n\r\nexport default {\r\n    title: 'My Component/Todo List',\r\n    component: ToDoList\r\n}\r\nconst Template: Story<ToDoListPropsStory> = (args) => (\r\n    <ToDoList {...args}/>\r\n);\r\n\r\nexport const TodoListStories = Template.bind({});\r\nTodoListStories.args = {\r\n    filterTodo: todos,\r\n    setToDos: handleClick,\r\n    toDo: todos[0],\r\n    toDos: todos\r\n};\r\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":30,"column":19,"nodeType":"88","messageId":"89","endLine":30,"endColumn":27},{"ruleId":"86","severity":1,"message":"90","line":32,"column":11,"nodeType":"88","messageId":"89","endLine":32,"endColumn":21},{"ruleId":"82","replacedBy":"91"},{"ruleId":"84","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":26,"column":8,"nodeType":"95","endLine":26,"endColumn":23,"suggestions":"96"},{"ruleId":"82","replacedBy":"91"},{"ruleId":"84","replacedBy":"92"},{"ruleId":"86","severity":1,"message":"97","line":3,"column":18,"nodeType":"88","messageId":"89","endLine":3,"endColumn":25},{"ruleId":"86","severity":1,"message":"98","line":16,"column":11,"nodeType":"88","messageId":"89","endLine":16,"endColumn":24},{"ruleId":"99","severity":1,"message":"100","line":19,"column":1,"nodeType":"101","endLine":22,"endColumn":2},{"ruleId":"99","severity":1,"message":"100","line":25,"column":1,"nodeType":"101","endLine":28,"endColumn":2},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"@typescript-eslint/no-unused-vars","'setColor' is assigned a value but never used.","Identifier","unusedVar","'applyStyle' is assigned a value but never used.",["102"],["103"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveToLocalStorage'. Either include them or remove the dependency array.","ArrayExpression",["104"],"'faTrash' is defined but never used.","'deleteHandler' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [toDos, status, filterHandler, saveToLocalStorage]",{"range":"107","text":"108"},[617,632],"[toDos, status, filterHandler, saveToLocalStorage]"]