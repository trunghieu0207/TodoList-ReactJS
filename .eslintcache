[{"C:\\project\\my-app\\src\\stories\\Header.stories.tsx":"1","C:\\project\\my-app\\src\\stories\\Button.stories.tsx":"2","C:\\project\\my-app\\src\\stories\\Page.stories.tsx":"3","C:\\project\\my-app\\src\\components\\__stories__\\Form.stories.tsx":"4","C:\\project\\my-app\\src\\stories\\Button.tsx":"5","C:\\project\\my-app\\src\\stories\\Page.tsx":"6","C:\\project\\my-app\\src\\components\\Form.tsx":"7","C:\\project\\my-app\\src\\stories\\Header.tsx":"8","C:\\project\\my-app\\src\\components\\ToDoList.tsx":"9","C:\\project\\my-app\\src\\index.js":"10","C:\\project\\my-app\\src\\reportWebVitals.js":"11","C:\\project\\my-app\\src\\App.tsx":"12","C:\\project\\my-app\\src\\components\\Todo.tsx":"13","C:\\project\\my-app\\src\\components\\__stories__\\Todo.stories.tsx":"14","C:\\project\\my-app\\src\\components\\__stories__\\ToDoList.stories.tsx":"15"},{"size":510,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":804,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":605,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1010,"mtime":1609735535782,"results":"20","hashOfConfig":"17"},{"size":941,"mtime":499162500000,"results":"21","hashOfConfig":"17"},{"size":2415,"mtime":499162500000,"results":"22","hashOfConfig":"17"},{"size":1690,"mtime":1609734603923,"results":"23","hashOfConfig":"17"},{"size":1356,"mtime":499162500000,"results":"24","hashOfConfig":"17"},{"size":662,"mtime":1609735294834,"results":"25","hashOfConfig":"17"},{"size":500,"mtime":1609140304259,"results":"26","hashOfConfig":"17"},{"size":362,"mtime":1609140304261,"results":"27","hashOfConfig":"17"},{"size":1897,"mtime":1609733819419,"results":"28","hashOfConfig":"17"},{"size":1488,"mtime":1609735294843,"results":"29","hashOfConfig":"17"},{"size":698,"mtime":1609735294852,"results":"30","hashOfConfig":"17"},{"size":884,"mtime":1609735294866,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g95q5d",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"C:\\project\\my-app\\src\\stories\\Header.stories.tsx",[],["68","69"],"C:\\project\\my-app\\src\\stories\\Button.stories.tsx",[],"C:\\project\\my-app\\src\\stories\\Page.stories.tsx",[],"C:\\project\\my-app\\src\\components\\__stories__\\Form.stories.tsx",[],"C:\\project\\my-app\\src\\stories\\Button.tsx",[],"C:\\project\\my-app\\src\\stories\\Page.tsx",[],"C:\\project\\my-app\\src\\components\\Form.tsx",[],"C:\\project\\my-app\\src\\stories\\Header.tsx",[],"C:\\project\\my-app\\src\\components\\ToDoList.tsx",[],"C:\\project\\my-app\\src\\index.js",[],["70","71"],"C:\\project\\my-app\\src\\reportWebVitals.js",[],"C:\\project\\my-app\\src\\App.tsx",["72"],"import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\n\nexport interface TodoInterface {\n    completed: boolean;\n    text: string;\n    id: number;\n}\n\nfunction App() {\n    const [inputText, setInputText] = useState('');\n    const [toDos, setToDos] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filterTodo, setFilterTodo] = useState([]);\n\n\n    useEffect(() => {\n        getFromLocalStorage();\n    }, []);\n\n    useEffect(() => {\n        filterHandler();\n        saveToLocalStorage();\n    }, [toDos, status]);\n\n    const filterHandler = () => {\n        switch (status) {\n            case 'completed':\n               setFilterTodo(toDos.filter((todo: TodoInterface) => todo.completed));\n               break;\n            case 'uncompleted':\n                setFilterTodo(toDos.filter((todo: TodoInterface) => !todo.completed));\n                break;\n            default:\n                setFilterTodo(toDos);\n        }\n    }\n\n    const saveToLocalStorage = () => {\n        localStorage.setItem('toDos', JSON.stringify(toDos));\n    }\n\n    const getFromLocalStorage = () => {\n        const dataFromLocal = localStorage.getItem('toDos');\n        if (dataFromLocal === null) {\n            localStorage.setItem('toDos', JSON.stringify([]))\n        } else {\n            setToDos(JSON.parse(dataFromLocal));\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Todo List</h1>\n            </header>\n            <Form\n                inputText={inputText}\n                toDos={toDos}\n                setToDos={setToDos}\n                setInputText={setInputText}\n                setStatus={setStatus}/>\n            <ToDoList toDos={toDos} setToDos={setToDos} filterTodo={filterTodo}/>\n        </div>\n    );\n}\n\nexport default App;\n",["73","74"],"C:\\project\\my-app\\src\\components\\Todo.tsx",[],"C:\\project\\my-app\\src\\components\\__stories__\\Todo.stories.tsx",["75"],"import Todo, {TodoProps} from \"../Todo\";\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport {Story} from \"@storybook/react/types-6-0\";\r\n\r\nconst todos = [\r\n    {\r\n        completed: true,\r\n        text: 'string',\r\n        id: Math.random() * 1000,\r\n    },\r\n    {\r\n        completed: false,\r\n        text: 'string',\r\n        id: Math.random() * 1000,\r\n    },\r\n]\r\nconst handleClick = action('click');\r\n\r\nexport default {\r\n    title: 'My Component/Todo',\r\n    component: Todo\r\n}\r\n\r\nconst Template: Story<TodoProps> = (args) => (\r\n    <Todo {...args}/>\r\n)\r\n\r\nexport const TodoStories = Template.bind({});\r\nTodoStories.args = {\r\n    toDos: todos,\r\n    setTodo: handleClick,\r\n    toDo: todos[0]\r\n};","C:\\project\\my-app\\src\\components\\__stories__\\ToDoList.stories.tsx",["76"],"import ToDoList, {ToDoListProps} from \"../ToDoList\";\r\nimport {action} from \"@storybook/addon-actions\";\r\nimport {Story} from \"@storybook/react/types-6-0\";\r\nimport {TodoInterface} from \"../../App\";\r\n\r\ninterface ToDoListPropsStory extends ToDoListProps{\r\n    toDo?: TodoInterface;\r\n}\r\n\r\nconst todos: TodoInterface[] = [\r\n    {\r\n        completed: true,\r\n        text: 'string',\r\n        id: Math.random() * 1000,\r\n    },\r\n    {\r\n        completed: false,\r\n        text: 'string',\r\n        id: Math.random() * 1000,\r\n    },\r\n]\r\n\r\nconst handleClick = action('click');\r\n\r\nexport default {\r\n    title: 'My Component/TodoList',\r\n    component: ToDoList\r\n}\r\nconst Template: Story<ToDoListPropsStory> = (args) => (\r\n    <ToDoList {...args}/>\r\n);\r\n\r\nexport const TodoStories = Template.bind({});\r\nTodoStories.args = {\r\n    filterTodo: todos,\r\n    setToDos: handleClick,\r\n    toDo: todos[0]\r\n};\r\n",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":26,"column":8,"nodeType":"85","endLine":26,"endColumn":23,"suggestions":"86"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"87","severity":1,"message":"88","line":20,"column":1,"nodeType":"89","endLine":23,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":19,"column":1,"nodeType":"89","endLine":22,"endColumn":2},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveToLocalStorage'. Either include them or remove the dependency array.","ArrayExpression",["92"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [toDos, status, filterHandler, saveToLocalStorage]",{"range":"95","text":"96"},[617,632],"[toDos, status, filterHandler, saveToLocalStorage]"]