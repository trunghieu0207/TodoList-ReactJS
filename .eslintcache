[{"C:\\project\\my-app\\src\\index.js":"1","C:\\project\\my-app\\src\\App.tsx":"2","C:\\project\\my-app\\src\\reportWebVitals.js":"3","C:\\project\\my-app\\src\\components\\Form.tsx":"4","C:\\project\\my-app\\src\\components\\ToDoList.js":"5","C:\\project\\my-app\\src\\components\\Todo.js":"6","C:\\project\\my-app\\src\\stories\\Button.stories.tsx":"7","C:\\project\\my-app\\src\\stories\\Header.stories.tsx":"8","C:\\project\\my-app\\src\\stories\\Page.stories.tsx":"9","C:\\project\\my-app\\src\\stories\\Page.tsx":"10","C:\\project\\my-app\\src\\stories\\Header.tsx":"11","C:\\project\\my-app\\src\\stories\\Button.tsx":"12","C:\\project\\my-app\\src\\components\\__stories__\\Form.stories.tsx":"13"},{"size":500,"mtime":1609140304259,"results":"14","hashOfConfig":"15"},{"size":1911,"mtime":1609223158975,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609140304261,"results":"17","hashOfConfig":"15"},{"size":1326,"mtime":1609226536322,"results":"18","hashOfConfig":"15"},{"size":426,"mtime":1609140304254,"results":"19","hashOfConfig":"15"},{"size":1039,"mtime":1609224038715,"results":"20","hashOfConfig":"15"},{"size":804,"mtime":499162500000,"results":"21","hashOfConfig":"15"},{"size":510,"mtime":499162500000,"results":"22","hashOfConfig":"15"},{"size":605,"mtime":499162500000,"results":"23","hashOfConfig":"15"},{"size":2415,"mtime":499162500000,"results":"24","hashOfConfig":"15"},{"size":1356,"mtime":499162500000,"results":"25","hashOfConfig":"15"},{"size":941,"mtime":499162500000,"results":"26","hashOfConfig":"15"},{"size":766,"mtime":1609227065851,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"g95q5d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},"C:\\project\\my-app\\src\\index.js",[],["61","62"],"C:\\project\\my-app\\src\\App.tsx",["63"],"import './App.css';\n// @ts-ignore\nimport React, {useEffect, useState} from \"react\";\nimport Form from \"./components/Form\";\nimport ToDoList from \"./components/ToDoList\";\n\nexport interface TodoInterface {\n    completed: boolean;\n    text: string;\n    id: string;\n}\n\nfunction App() {\n    const [inputText, setInputText] = useState('');\n    const [toDos, setToDos] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filterTodo, setFilterTodo] = useState([]);\n\n\n    useEffect(() => {\n        getFromLocalStorage();\n    }, []);\n\n    useEffect(() => {\n        filterHandler();\n        saveToLocalStorage();\n    }, [toDos, status]);\n\n    const filterHandler = () => {\n        switch (status) {\n            case 'completed':\n               setFilterTodo(toDos.filter((todo: TodoInterface) => todo.completed));\n               break;\n            case 'uncompleted':\n                setFilterTodo(toDos.filter((todo: TodoInterface) => !todo.completed));\n                break;\n            default:\n                setFilterTodo(toDos);\n        }\n    }\n\n    const saveToLocalStorage = () => {\n        localStorage.setItem('toDos', JSON.stringify(toDos));\n    }\n\n    const getFromLocalStorage = () => {\n        const dataFromLocal = localStorage.getItem('toDos');\n        if (dataFromLocal === null) {\n            localStorage.setItem('toDos', JSON.stringify([]))\n        } else {\n            setToDos(JSON.parse(dataFromLocal));\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Todo List</h1>\n            </header>\n            <Form\n                inputText={inputText}\n                toDos={toDos}\n                setToDos={setToDos}\n                setInputText={setInputText}\n                setStatus={setStatus}/>\n            <ToDoList toDos={toDos} setToDos={setToDos} filterTodo={filterTodo}/>\n        </div>\n    );\n}\n\nexport default App;\n",["64","65"],"C:\\project\\my-app\\src\\reportWebVitals.js",[],"C:\\project\\my-app\\src\\components\\Form.tsx",["66","67"],"// @ts-ignore\r\nimport React, {ChangeEvent} from 'react';\r\nimport Todo from '../App';\r\n\r\nconst Form = ({setInputText, setToDos, toDos, inputText, setStatus}: {setInputText: any, setToDos: any, toDos: any, inputText: string, setStatus: any}) => {\r\n    const inputTextHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputText(e.target.value);\r\n    }\r\n    const submitHandler = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setToDos([...toDos, {text: inputText, completed: false, id: Math.random() * 1000}]);\r\n    }\r\n    const statusHandler = (e: any) => {\r\n        setStatus(e.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <input type=\"text\" className=\"todo-input\" onChange={inputTextHandler}/>\r\n            <button className=\"todo-button\" type=\"submit\" onClick={submitHandler}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;",["68","69"],"C:\\project\\my-app\\src\\components\\ToDoList.js",[],"C:\\project\\my-app\\src\\components\\Todo.js",["70"],"C:\\project\\my-app\\src\\stories\\Button.stories.tsx",[],"C:\\project\\my-app\\src\\stories\\Header.stories.tsx",[],"C:\\project\\my-app\\src\\stories\\Page.stories.tsx",[],"C:\\project\\my-app\\src\\stories\\Page.tsx",[],"C:\\project\\my-app\\src\\stories\\Header.tsx",[],"C:\\project\\my-app\\src\\stories\\Button.tsx",[],["71","72"],"C:\\project\\my-app\\src\\components\\__stories__\\Form.stories.tsx",["73"],"import React, { ComponentProps } from 'react';\r\nimport { Story } from '@storybook/react';\r\n\r\nimport Form from '../Form';\r\nimport {action} from \"@storybook/addon-actions\";\r\n\r\nconst todos = {\r\n    completed: true,\r\n    text: 'string',\r\n    id: Math.random() * 1000,\r\n}\r\n\r\n// This default export determines where your story goes in the story list\r\nconst handleClick = action('click');\r\nexport default {\r\n    title: 'My Component/Form',\r\n    component: Form,\r\n};\r\n\r\nconst Template: Story<ComponentProps<typeof Form>> = (args) => (\r\n    <Form {...args} />\r\n);\r\n\r\nexport const FormAndSelect = Template.bind({});\r\nFormAndSelect.args = {\r\n    setInputText: handleClick,\r\n    setToDos: handleClick,\r\n    setStatus: handleClick,\r\n    toDos: todos,\r\n    inputText: 'string'\r\n};",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":27,"column":8,"nodeType":"80","endLine":27,"endColumn":23,"suggestions":"81"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":16,"nodeType":"84","messageId":"85","endLine":2,"endColumn":27},{"ruleId":"82","severity":1,"message":"86","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":12},{"ruleId":"74","replacedBy":"87"},{"ruleId":"76","replacedBy":"88"},{"ruleId":"82","severity":1,"message":"89","line":4,"column":11,"nodeType":"84","messageId":"85","endLine":4,"endColumn":20},{"ruleId":"74","replacedBy":"90"},{"ruleId":"76","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":15,"column":1,"nodeType":"94","endLine":18,"endColumn":3},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveToLocalStorage'. Either include them or remove the dependency array.","ArrayExpression",["97"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'Todo' is defined but never used.",["95"],["96"],"'propsType' is defined but never used.",["95"],["96"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [toDos, status, filterHandler, saveToLocalStorage]",{"range":"100","text":"101"},[631,646],"[toDos, status, filterHandler, saveToLocalStorage]"]